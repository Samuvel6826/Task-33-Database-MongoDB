                                                                                        Task - 33 - Database - MongoDB

1.	Find all the information about each products
Ans:

db.products.find()





2.	Find the product price which are between 400 to 800
Ans:

db.products.find({ $and: [{ product_price: { $gte: 400 } }, { product_price: { $lte: 800 } }] })





3.	Find the product price which are not between 400 to 600
Ans:

db.products.find({ product_price: { "$not": { "$gte": 400, "$lte": 600 } } })





4.	List the four product which are greater than 500 in price
Ans:

db.products.find({ product_price: { $gte: 500 } }).limit(4)





5.	Find the product name and product material of each products
Ans:

db.products.find({}, { product_name: 1, product_material: 1, _id: 0 })





6.	Find the product with a row id of 10
Ans:

db.products.find({ id: "10" })





7.	Find only the product name and product material
Ans:

db.products.find({}, { product_name: 1, product_material: 1, _id: 0 })

    (OR)

db.products.aggregate([
    {
        "$project":
        {
            "_id": 0,
            "Only product name and product material ":
                ["$product_name", "$product_material"]
        }
    }
])





8.	Find all products which contain the value of soft in product material
Ans:

db.products.find({ product_material: 'Soft' })





9.	Find products which contain product color indigo  and product price 492.00
Ans:

db.products.find({
    "product_color": "indigo",
    "product_price": 492.00
});

NOTE : Above mentioned query will return nothing because there is no product in that Condition. 
       But if the product_color changed to 20. Then it will return a product.






10.	Delete the products which product price value are same
Ans:

db.products.aggregate([
    {
        $group: {
            _id: { product_price: "$product_price" },
            count: { $sum: 1 },
            ids: { $push: "$_id" }
        }
    },
    {
        $match: {
            count: { $gt: 1 }
        }
    }
]).forEach(duplicate => {
    duplicate.ids.shift();
    db.products.deleteMany({ _id: { $in: duplicate.ids } });
});


